@model pos_asp_net_mvc.Entities.Product
@using pos_asp_net_mvc.Entities

@{
    ViewBag.Title = "Product";
    var Categories = (List<Category>)ViewBag.Categories;
}

<h1 class="page-header">
    Product
    <small>Management</small>
</h1>

<ol class="breadcrumb">
    <li><a href="@Url.Action("Index", "Home")">Home</a></li>
    <li><a href="javascript:void(0);">Master</a></li>
    <li><a href="@Url.Action("Index", "Product")">Product</a></li>
    <li class="active">Create New</li>
</ol>

<div class="panel panel-default">
    <div class="panel-heading">
        <div class="clearfix">
            <div class="pull-left">
                <i class="fa fa-plus"></i>&nbsp;<strong>Create New</strong>
            </div>
            <div class="pull-right">
                <a href="@Url.Action("Index", "Product")" class="btn btn-sm btn-info">
                    <i class="fa fa-rotate-left"></i>&nbsp;Back
                </a>
            </div>
        </div>
    </div>
    <div class="panel-body">
       @using (Html.BeginForm("Create", "Product", null, FormMethod.Post, new { @enctype = "multipart/form-data", @class= "form-horizontal", @id = "form-submit" , @role="form" }))
       {
           @Html.AntiForgeryToken()
          
         
            <div class="form-group">
                @Html.LabelFor(model => model.Sku, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sku, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sku, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-2" for="id_image">Image :</label>
                <div class="col-sm-10">
                    <input type="file" class="file-input-image" name="upload">
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BrandId, "Brand", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("BrandId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.BrandId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BrandId, "Supplier", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SupplierId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TypeId, "Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TypeId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TypeId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-2" for="categories">Categories :</label>
                <div class="col-sm-10">
                    <select name="CategoryId" class="form-control" multiple="multiple">
                        @if (Categories != null)
                        {
                            foreach (var row in Categories)
                            {
                                <option value="@row.Id">@row.Name</option>
                            }
                        }
                    </select>
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.PricePurchase, "Price Purchase", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PricePurchase, new { htmlAttributes = new { @class = "form-control", @type="number", @min="0", @id = "price_purchase", @Value = "0" } })
                    @Html.ValidationMessageFor(model => model.PricePurchase, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PriceProfit, "Price Profit (%)", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PriceProfit, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @id = "price_profit", @Value = "0" } })
                    @Html.ValidationMessageFor(model => model.PriceProfit, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PriceSale, "Price Sale", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PriceSale, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @readonly = "readonly", @id = "price_sales", @Value = "0" } })
                    @Html.ValidationMessageFor(model => model.PriceSale, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Stock, "Stock", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @readonly= "readonly", @Value = "0", } })
                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateExpired, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.DateExpired, "{0:yyyy-MM-dd}", new { @class = "form-control input-datepicker", @type = "text", @Value = DateTime.Now.Date.ToString("yyyy-MM-dd") })
                    @Html.ValidationMessageFor(model => model.DateExpired, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @rows = "5" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(m => m.Notes, new { @class = "form-control", @rows = "5" })
                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-success">
                        <i class="fa fa-save"></i>&nbsp;Save
                    </button>
                    <button type="reset" class="btn btn-warning">
                        <i class="fa fa-refresh"></i>&nbsp;Reset
                    </button>
                </div>
            </div>
       }
    </div>
    <div class="panel-footer"></div>
</div>

@section Scripts {
    <script src="~/Scripts/App/products.js?@Guid.NewGuid()"></script>
}
